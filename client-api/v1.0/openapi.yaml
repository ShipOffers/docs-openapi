openapi: 3.0.1
info:
  title: 'ShipOffers: Client API'
  description: "Documentation for the ShipOffers API. Allows our customers to connect to our services for their internal use. Users of this API can manage inventory, orders, products and more with the endpoints listed below.\n\nWhile this is an updated version, all the URLs and parameters are the same."
  contact:
    name: Brennen Denault
    email: brennen@shipoffers.com
  version: v1
paths:
  '/stores/{store_id}/orders/new.{format}':
    post:
      tags:
        - Order
      summary: Posting a new order.
      description: "Creates a new order record. Items in the order can be supplied as an array with appropriate attributes.\r\nThe ```SKU``` field in an item will be mapped to an existing SKU record in the database. If a SKU record with\r\nthe supplied string cannot be found the order will be rejected and return a 400 error.\r\nItems can be added later but are allowed to be sent over this end point for convenience. If you choose to add\r\nitems you must supply a valid ```SKU``` and ```quantity```, or else the order\r\nwill be rejected.\r\n\r\nAn invalid order will respond with a 404 error along with a array of the error messages."
      operationId: PostStoreOrder
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PostOrderResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PostOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PostOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PostOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/PostOrderResponse'
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/orders.{format}':
    get:
      tags:
        - Order
      summary: Gets all orders for a given store.
      description: "Gets all shipments in the store. Optional parameters are ```updated_at_start```, ```updated_at_end```, and\r\n```order_number```. ```updated_at_start``` and ```updated_at_end``` must be valid ISO 8601 timestamps."
      operationId: GetStoreOrders
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: updated_at_start
          in: query
          schema:
            type: string
            format: date-time
        - name: updated_at_end
          in: query
          schema:
            type: string
            format: date-time
        - name: order_number
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: per_page
          in: query
          schema:
            type: integer
            format: int32
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetStoreOrdersResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetStoreOrdersResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetStoreOrdersResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetStoreOrdersResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetStoreOrdersResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/orders/{order_id}.{format}':
    get:
      tags:
        - Order
      summary: Retrieves a single order by the order's order_id in ShipOffer's system.
      operationId: GetStoreOrder
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_number
          in: query
          schema:
            type: string
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetSingleOrderResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleOrderResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetSingleOrderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetSingleOrderResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSingleOrderResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    delete:
      tags:
        - Order
      summary: Sets an Order's status to `canceled`. This can only be done while the order is still unverified.
      operationId: DeleteStoreOrder
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_number
          in: query
          schema:
            type: string
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/orders/{order_id}/update.{format}':
    put:
      tags:
        - Order
      summary: Updates an order by ID.
      description: "Only while an order’s status is still unverified can fields in the order can be updated.\r\nThe fields ```status``` and ```tracking_number``` cannot be modified."
      operationId: PutStoreOrder
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/orders/{order_id}/items/{item_id}.{format}':
    get:
      tags:
        - OrderItem
      summary: Gets a single order item.
      operationId: GetStoreOrderItem
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: item_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetSingleOrderItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleOrderItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetSingleOrderItemResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetSingleOrderItemResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSingleOrderItemResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - OrderItem
      summary: Updates an order item record.
      operationId: PutStoreOrderItem
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: item_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    delete:
      tags:
        - OrderItem
      summary: Destroys an order item record. Can only be performed while the Order is still in the `unverified` stage.
      operationId: DeleteStoreOrderItem
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: item_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/orders/{order_id}/items.{format}':
    get:
      tags:
        - OrderItem
      summary: Retrieves an array of order items for a single order.
      operationId: GetStoreOrderItems
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetStoreOrderItemsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetStoreOrderItemsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetStoreOrderItemsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetStoreOrderItemsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetStoreOrderItemsResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/orders/{order_id}/items/add.{format}':
    post:
      tags:
        - OrderItem
      summary: Adds an order item to an order.
      description: '```SKU``` and ```quantity``` fields are mandatory.'
      operationId: PostStoreOrderItems
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderItemRequest'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/products/clients/{product_id}/skus.{format}':
    get:
      tags:
        - Product
      summary: Retrieves all SKUs in the store parented to the product.
      operationId: GetStoreProductSkus
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetProductSkusResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductSkusResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetProductSkusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetProductSkusResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetProductSkusResponse'
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/products/clients.{format}':
    get:
      tags:
        - Product
      summary: Retrieves all products sold by a provided store.
      operationId: GetStoreProducts
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetStoreProductsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetStoreProductsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetStoreProductsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetStoreProductsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetStoreProductsResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/products/clients/{product_id}/skus/new.{format}':
    post:
      tags:
        - Product
      summary: Adds a SKU that will be parented to the product.
      description: '```multiply_quantity``` and ```SKU``` are required.'
      operationId: PostStoreProductSkus
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuItemRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SkuItemRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SkuItemRequest'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/products/clients/new.{format}':
    post:
      tags:
        - Product
      summary: Adds a product to the store.
      description: "Requires a ```name``` and ```ship_offers_product_id```. Refer to the ShipOffers end point\r\nin the products query-space to get a list of ShipOffers products."
      operationId: PostStoreProducts
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/products/clients/{product_id}/{sku_id}.{format}':
    delete:
      tags:
        - Product
      summary: Deletes a SKU by ID.
      description: "This action can only be performed while the SKU is not referenced in any\r\nOrder Items. A 403 forbidden error will be returned when an attempt is made\r\nto delete a SKU already referenced in an order items. Contact ShipOffers\r\ndevelopment team for assistance if you need your SKU info modified."
      operationId: DeleteStoreProduct
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: sku_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/orders/{order_id}/shipments.{format}':
    get:
      tags:
        - Shipment
      summary: Get information about all shipments for an order.
      operationId: GetStoreOrderShipments
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: order_number
          in: query
          schema:
            type: string
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/shipments/{id}.{format}':
    get:
      tags:
        - Shipment
      summary: Get information for a single shipment.
      operationId: GetStoreShipment
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetSingleShipmentResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleShipmentResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetSingleShipmentResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetSingleShipmentResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSingleShipmentResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/stores/{store_id}/shipments.{format}':
    get:
      tags:
        - Shipment
      summary: 'Get all shipments for a store, limited by optional parameters.'
      description: "Gets all shipments in the store. Optional parameters are ```updated_at_start```, ```updated_at_end```, and\r\n```order_number```. ```updated_at_start``` and ```updated_at_end``` must be valid ISO 8601 timestamps."
      operationId: GetStoreShipments
      parameters:
        - name: store_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: updated_at_start
          in: query
          schema:
            type: string
            format: date-time
        - name: updated_at_end
          in: query
          schema:
            type: string
            format: date-time
        - name: order_number
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: per_page
          in: query
          schema:
            type: integer
            format: int32
        - name: format
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequestFormat'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetStoreShipmentsResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
components:
  schemas:
    ErrorDetails:
      type: object
      properties:
        status_code:
          type: integer
          description: HTTP Status code from the error.
          format: int32
        message:
          type: string
          description: Detailed message providing user with what went wrong.
          nullable: true
      additionalProperties: false
      description: Simple model for provided error messages to users.
    GetInventoryResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/InventoryResponse'
          description: The products in the inventory.
          nullable: true
      additionalProperties: false
      description: Represents the response for the inventory.
    GetProductSkusResponse:
      type: object
      properties:
        skus:
          type: array
          items:
            $ref: '#/components/schemas/ProductSkusResponse'
          description: The product's skus.
          nullable: true
      additionalProperties: false
      description: Represents the response for a product's skus.
    GetReturnsResponse:
      type: object
      properties:
        total:
          type: integer
          description: The total number of returns.
          format: int32
        pages:
          type: integer
          description: The number of pages.
          format: int32
        order_returns:
          type: array
          items:
            $ref: '#/components/schemas/ReturnResponse'
          description: The current page.
          nullable: true
      additionalProperties: false
      description: Represents the response for a store's returns.
    GetSingleOrderItemResponse:
      type: object
      properties:
        order_item:
          $ref: '#/components/schemas/OrderItemResponse'
      additionalProperties: false
      description: Represents the response for a single order item.
    GetSingleOrderResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/OrderResponse'
      additionalProperties: false
      description: Represents the response for a single order.
    GetSingleShipmentResponse:
      type: object
      properties:
        shipment:
          $ref: '#/components/schemas/ShipmentResponse'
      additionalProperties: false
      description: Represents the response for a single shipment.
    GetStoreInboundsResponse:
      type: object
      properties:
        inbounds:
          type: array
          items:
            $ref: '#/components/schemas/InboundResponse'
          description: The inbounds for the store.
          nullable: true
      additionalProperties: false
      description: Represents the response for a store's inbounds.
    GetStoreOrderItemsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponse'
          description: The items in the order.
          nullable: true
      additionalProperties: false
      description: Represents the response for a store's order items.
    GetStoreOrdersResponse:
      type: object
      properties:
        total:
          type: integer
          description: The total number of orders.
          format: int32
        pages:
          type: integer
          description: The number of pages.
          format: int32
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
          description: The current page.
          nullable: true
      additionalProperties: false
      description: Represents the response for a store's orders.
    GetStoreProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
          description: The products for the store.
          nullable: true
      additionalProperties: false
      description: Represents the response for a store's products.
    GetStoreShipmentsResponse:
      type: object
      properties:
        shipments:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentResponse'
          description: The shipments for the store.
          nullable: true
      additionalProperties: false
      description: Represents the response for a store's shipments.
    InboundResponse:
      type: object
      properties:
        po_number:
          type: string
          nullable: true
        received_on:
          type: string
          format: date-time
        sku:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        source:
          type: string
          nullable: true
      additionalProperties: false
    InventoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        inventory:
          type: integer
          format: int32
        inventory_updated_at:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    OrderItemRequest:
      type: object
      properties:
        sku:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
      additionalProperties: false
    OrderItemResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        sku_id:
          type: integer
          format: int32
          nullable: true
        quantity:
          type: integer
          format: int32
          nullable: true
        sku:
          type: string
          nullable: true
      additionalProperties: false
    OrderRequest:
      type: object
      properties:
        order_number:
          type: string
          nullable: true
        ship_offers_external_record_id:
          type: string
          nullable: true
        requested_shipping_service:
          type: string
          nullable: true
        ship_name:
          type: string
          nullable: true
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        order_date:
          type: string
          format: date-time
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRequest'
          nullable: true
        substore_code:
          type: string
          nullable: true
      additionalProperties: false
    OrderResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        status:
          type: string
          nullable: true
        order_number:
          type: string
          nullable: true
        ship_name:
          type: string
          nullable: true
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        ship_offers_external_record_id:
          type: string
          nullable: true
        shipments:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentResponse'
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponse'
          nullable: true
      additionalProperties: false
    PostOrderResponse:
      type: object
      properties:
        order_number:
          type: string
          nullable: true
        ship_offers_external_record_id:
          type: string
          nullable: true
        requested_shipping_service:
          type: string
          nullable: true
        ship_name:
          type: string
          nullable: true
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        order_date:
          type: string
          format: date
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/PostOrderResponseItem'
          nullable: true
        substore_code:
          type: string
          nullable: true
      additionalProperties: false
    PostOrderResponseItem:
      type: object
      properties:
        sku:
          type: string
          nullable: true
        quantity:
          type: string
          nullable: true
      additionalProperties: false
    ProductRequest:
      type: object
      properties:
        name:
          type: string
          description: ''
          nullable: true
          example: ''
        ship_offers_product_id:
          type: integer
          description: ''
          format: int32
      additionalProperties: false
      description: Represents a product request.
    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        price:
          type: number
          format: double
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        clients_client_id:
          type: integer
          format: int32
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        ship_offers_product_id:
          type: integer
          format: int32
          nullable: true
        client_weight:
          type: number
          format: double
          nullable: true
        sku:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
      additionalProperties: false
    ProductSkusResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        multiply_quantity:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        clients_product_id:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        clients_store_id:
          type: integer
          format: int32
          nullable: true
        sku:
          type: string
          nullable: true
        active:
          type: boolean
          nullable: true
      additionalProperties: false
    RequestFormat:
      enum:
        - Json
        - Xml
      type: string
    ReturnItemInfo:
      type: object
      properties:
        sku:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
      additionalProperties: false
    ReturnResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        returned_on:
          type: string
          format: date
        order_numbers:
          type: string
          nullable: true
        rma_numbers:
          type: string
          nullable: true
        customer:
          type: string
          nullable: true
        reason:
          type: string
          nullable: true
        medical:
          type: boolean
          nullable: true
        comments:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/ReturnItemInfo'
          nullable: true
      additionalProperties: false
    ShipmentOrderInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        order_number:
          type: string
          nullable: true
      additionalProperties: false
    ShipmentResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        order_number:
          type: string
          nullable: true
        tracking_number:
          type: string
          nullable: true
        ship_name:
          type: string
          nullable: true
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        carrier_code:
          type: string
          nullable: true
        service_code:
          type: string
          nullable: true
        ship_date:
          type: string
          format: date
          nullable: true
        orders:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentOrderInfo'
          nullable: true
      additionalProperties: false
    SkuItemRequest:
      type: object
      properties:
        sku:
          type: string
          description: ''
          nullable: true
          example: ''
        description:
          type: string
          description: ''
          nullable: true
          example: ''
        multiply_quantity:
          type: integer
          description: ''
          format: int32
      additionalProperties: false
      description: Represents a SKU item request.
  securitySchemes:
    basic:
      type: http
      description: Basic Authentication
      scheme: basic
security:
  - basic: [ ]